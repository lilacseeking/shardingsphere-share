# 数据脱敏

# 应用设置
server.port=8002
spring.application.name=data-desensitization

# JPA设置
spring.jpa.database=mysql
spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.DefaultNamingStrategy
spring.jpa.properties.hibernate.use_sql_comments=false
spring.jpa.hibernate.ddl-auto=update

# dubbo设置
dubbo.application.name=${spring.application.name}
dubbo.protocol.name=dubbo
dubbo.protocol.port=20882
dubbo.registry.address=zookeeper://127.0.0.1:2181
dubbo.consumer.timeout=3000
dubbo.server=true

# zookeeper
spring.cloud.zookeeper.connect-string=127.0.0.1:2181


spring.shardingsphere.datasource.name=d-sharding-master

spring.shardingsphere.datasource.d-sharding-master.type=org.apache.commons.dbcp2.BasicDataSource
spring.shardingsphere.datasource.d-sharding-master.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.d-sharding-master.url=jdbc:mysql://localhost:3306/d-sharding-master
spring.shardingsphere.datasource.d-sharding-master.username=root
spring.shardingsphere.datasource.d-sharding-master.password=root
spring.shardingsphere.datasource.d-sharding-master.max-total=100

#加解密器类型，可自定义或选择内置类型：MD5/AES
spring.shardingsphere.encrypt.encryptors.encryptor_aes.type=aes
#属性配置, 注意：使用AES加密器，需要配置AES加密器的KEY属性：aes.key.value
spring.shardingsphere.encrypt.encryptors.encryptor_aes.props.aes.key.value=123456
spring.shardingsphere.encrypt.encryptors.encryptor_aes.qualifiedColumns=t_share_order_info.pay_id
#存储明文的字段
# spring.shardingsphere.encrypt.tables.t_share_order_info.columns.pay_id.plainColumn=pay_id
#存储密文的字段
spring.shardingsphere.encrypt.tables.t_share_order_info.columns.pay_id.cipherColumn=pay_id
#辅助查询字段，针对ShardingQueryAssistedEncryptor类型的加解密器进行辅助查询
spring.shardingsphere.encrypt.tables.t_share_order_info.columns.pay_id.assistedQueryColumn=pay_id
#加密器名字
spring.shardingsphere.encrypt.tables.t_share_order_info.columns.pay_id.encryptor=encryptor_aes


spring.shardingsphere.props.sql.show=true
# 是否使用密文列查询
spring.shardingsphere.props.query.with.cipher.column=true